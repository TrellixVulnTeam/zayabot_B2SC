      const { default: makeWASocket, BufferJSON, WA_DEFAULT_EPHEMERAL, generateWAMessageFromContent, downloadContentFromMessage, downloadHistory, proto, getMessage, generateWAMessageContent, prepareWAMessageMedia } = require('@adiwajshing/baileys-md')
      let fs = require('fs')
      let handler = async (m) => {
          let who
          if (m.isGroup) who = m.mentionedJid[0] ? m.mentionedJid[0] : m.sender
          else who = m.sender
          let user = global.db.data.users[who]
      let anu = `„Äå üé® CANVAS „Äç
    
‚ú¶ */poster*
‚Üí Transformo a foto que voc√™ enviou em um poster!
          
‚ú¶ */joke*
‚Üí Sabe aquela pessoa sem gra√ßa? Pois √©, mande a foto dela aqui e veja.
      
‚ú¶ */hitler*
‚Üí Um notici√°rio com a not√≠cia que a pessoa da foto √© pior que ele.
          
‚ú¶ */wanted*
‚Üí A pessoa s√≥ te d√° sumi√ßo? Usa esse comando aqui pra fazer uma figurinha especial pra ela.
          
‚ú¶ */12anos*
‚Üí Nem sei como descrever isso KKKKKK
      
‚ú¶ */lixo*
‚Üí Vou fazer um meme com a foto, com participa√ß√£o do nosso amigo Peter Parker!
          
‚ú¶ */circulo*
‚Üí Deixarei sua foto em formato de c√≠rculo
          
‚ú¶ */inverter*
‚Üí Vou inverter as cores da foto, colocando-a em negativo.
      
‚ú¶ */desfoque*
‚Üí Vou deixar sua foto desfocada!
      
‚ú¶ */cinza*
‚Üí Transforma sua foto em preto e branco.
          
‚ú¶ */sepia*
‚Üí Vou deixar a foto com uma colora√ß√£o mais envelhecida
      
`
           const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({
           templateMessage: {
               hydratedTemplate: {
                 hydratedContentText: anu,
                 locationMessage: { 
                 jpegThumbnail: fs.readFileSync('./arquivos/imagens/menu/figurinhas.jpg') }, 
                 hydratedFooterText: wm,
                 hydratedButtons: [{
                   quickReplyButton: {
                     displayText: 'üñ•Ô∏è Voltar ao menu',
                     id: '/menu'
                   }
      
      
                 }]
               }
             }
           }), { userJid: m.sender, quoted: m });
          //conn.reply(m.chat, text.trim(), m)
          return await conn.relayMessage(
               m.chat,
               template.message,
               { messageId: template.key.id }
           )
      }
      handler.command = /^(catcanvas)$/i
      
      module.exports = handler
      
      

      
      